<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on IYP UK</title>
    <link>https://www.iyp-uk.com/blog/</link>
    <description>Recent content in Blog on IYP UK</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <copyright>Copyright © 2017 IYP UK</copyright>
    <lastBuildDate>Sun, 22 Oct 2017 16:45:01 +0100</lastBuildDate>
    
	<atom:link href="https://www.iyp-uk.com/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Clean Code</title>
      <link>https://www.iyp-uk.com/blog/clean-code/</link>
      <pubDate>Sun, 22 Oct 2017 16:45:01 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/clean-code/</guid>
      <description>This post is a summary of some notes taken from the amazing series of clean code videos, themselves taken from the clean code book. Both come highly recommended if you want to improve your professionalism as a software engineer.
Names  Choose names thoughtfully Communicate your intent = by reading it you understand what it is / does Avoid disinformation Pronounceable names Avoid encodings (like Hungarian notation) Ensure code can read like prose in plain english  Variables = nouns Classes = nouns and names Methods = verbs booleans with isSomething  Name as scope dictates:  Private, details functions / classes / methods / vars should have long and explicit names Public, widely used functions / classes / methods / vars should have short and explicit names   Functions  1st rule: functions are small 2nd rule: they are smaller than that Functions do one thing: If a function is included in another it should be taken out  Extract till you drop If you can extract one function from another, you should, as the function isn’t doing one thing indeed  Classes hide in long functions =&amp;gt; Long functions = classes  Function structure  Small function signatures: 3 arguments max No boolean argument Avoid switch and if statements, replace by polymorphism Functional programming  No assignment statement A function is immutable: same input always gives the same output CQS: Command and Query Separation  Command  Execute the command and return nothing Can throw exception  Query  Execute the query and return value but do not change state  If a method modifies state, it must return void If a method queries state, it must not modify it  Tell don’t ask  Let the object itself deal with its state rather than asking for it before asking for a command Don’t chain methods  Block-passing technique Law of Demeter  Structured programming  Sequence Selection Interaction Single entrance at the top, single exit at the bottom, for all these blocks, and by composition modules, and systems do too   Form  Comments Classes and parameters:  Can have private parameters Tell don’t ask implies: No getters, No setters your class and the objects resulting from it are just a bunch of functions from the outside Polymorphism If you expose data, make it as abstract as possible so that we can derivate from that class with no issues  Class VS Data structure  DS is opposite of the class.</description>
    </item>
    
    <item>
      <title>Getting Started With Bluetooth Low Energy</title>
      <link>https://www.iyp-uk.com/blog/getting-started-with-bluetooth-low-energy/</link>
      <pubDate>Sat, 26 Aug 2017 18:14:18 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/getting-started-with-bluetooth-low-energy/</guid>
      <description>Talking electronics Hang on, what is Bluetooth in the first place? Have a look at the definition on the official bluetooth website.
One important thing to notice is that Bluetooth is a wireless technology standard using UFH (Ultra High Frequency) radio waves. This means it&amp;rsquo;s in the same family of telecommunications than GSM, GPS, WiFi, walkie-talkies and many more.
As you have probably discovered on their site, Bluetooth comes in different flavours:</description>
    </item>
    
    <item>
      <title>Getting Started With Terraform</title>
      <link>https://www.iyp-uk.com/blog/getting-started-with-terraform/</link>
      <pubDate>Thu, 24 Aug 2017 16:23:41 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/getting-started-with-terraform/</guid>
      <description>Definitions Terraform is a tool to manage infrastructures. This means you will create infrastructures (compute instances, storage, networking, DNS entries, &amp;hellip;) You may be already familiar with Ansible, which is a configuration management tool. This means with tools like Ansible, you can configure the infrastructure elements already created either manually or with Terraform.
What we will do  Creating an EC2 instance on AWS Destroying this EC2 instance  Install terraform  Please refer to the official documentation for variants.</description>
    </item>
    
    <item>
      <title>Getting Started With Kubernetes</title>
      <link>https://www.iyp-uk.com/blog/getting-started-with-kubernetes/</link>
      <pubDate>Thu, 24 Aug 2017 11:07:05 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/getting-started-with-kubernetes/</guid>
      <description>Let&amp;rsquo;s get started with Kubernetes and play around with it locally.
Foreword This article is largely inspired by the official Kubernetes getting started guide.
What is minikube?  Minikube is a tool that makes it easy to run Kubernetes locally. Minikube runs a single-node Kubernetes cluster inside a VM on your laptop for users looking to try out Kubernetes or develop with it day-to-day.
 Installation  Full instructions can be found on minikube installation guide</description>
    </item>
    
    <item>
      <title>Docker Compose Python Eve Mongodb</title>
      <link>https://www.iyp-uk.com/blog/docker-compose-python-eve-mongodb/</link>
      <pubDate>Fri, 18 Aug 2017 14:47:35 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/docker-compose-python-eve-mongodb/</guid>
      <description>PyCharm As a Python developer you are probably familiar with PyCharm, an amazing IDE from JetBrains. If you don&amp;rsquo;t know anything about it, have a look, you&amp;rsquo;ll probably not regret it :) Some of the steps in this article will make mention of PyCharm, however, it&amp;rsquo;s not required and you can still follow if you&amp;rsquo;re using another IDE. If you&amp;rsquo;re not using any IDE, well, god save your soul.</description>
    </item>
    
    <item>
      <title>Gardenlog With React, Node and Docker</title>
      <link>https://www.iyp-uk.com/blog/gardenlog-with-react-node-and-docker/</link>
      <pubDate>Mon, 31 Jul 2017 12:01:35 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/gardenlog-with-react-node-and-docker/</guid>
      <description>This will show the rewriting of a project using different technologies.
What is Gardenlog? Gardenlog is a project which:
 monitors garden (even if it could be anything), gathering all sorts of meteorological information allows users to interact with it   IYP UK has built it using several technologies:
 Backend: Python and Elasticsearch Frontend: Angular 4 with Material Hosting: All hosted on AWS, apart from the physical part, running on a raspberry pi   Scope of this project In this project, we will rewrite a good part of the Gardenlog project to demonstrate use of the following:</description>
    </item>
    
    <item>
      <title>Nodejs Docker And Aws</title>
      <link>https://www.iyp-uk.com/blog/nodejs-docker-and-aws/</link>
      <pubDate>Mon, 31 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/nodejs-docker-and-aws/</guid>
      <description>In this post, we will make use of NodeJS and Docker to provide and API which interfaces with an Elasticsearch instance in AWS.
Assuming you already have an AWS account, and aws-cli set up.
Process  Write the NodeJS app locally Wrap it a docker image and deploy this image to a registry (we will use docker hub here) Use AWS ECS (EC2 Container Service) to deploy and scale your app in the cloud.</description>
    </item>
    
  </channel>
</rss>