<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IYP UK</title>
    <link>https://www.iyp-uk.com/</link>
    <description>Recent content on IYP UK</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <lastBuildDate>Fri, 04 May 2018 14:30:33 +0100</lastBuildDate>
    
	<atom:link href="https://www.iyp-uk.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kafka JMX</title>
      <link>https://www.iyp-uk.com/blog/kafka-jmx/</link>
      <pubDate>Fri, 04 May 2018 14:30:33 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/kafka-jmx/</guid>
      <description>How to: JMX and Kafka There are many many ways to read from JMX in general.
We will show here 2 ways:
 using a GUI-based JMX-client: jconsole using a cli JMX-client: jmxterm  Running kafka You can run kafka the way you want.
In order to get JMX, you just need to set the JMX_PORT environment variable to an open port (usually 9999) before you start kafka.
If you use the iyp-uk.</description>
    </item>
    
    <item>
      <title>Traffic Signal</title>
      <link>https://www.iyp-uk.com/blog/traffic-signal/</link>
      <pubDate>Sun, 22 Apr 2018 21:51:31 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/traffic-signal/</guid>
      <description>Project Learn how to mimic traffic lights with 3 LEDs.
This project comes with code and instructions for both arduino and raspberry pi.
Both versions do the same thing, so you can also compare how these 2 programs differ.
What you need  1x breadboard 3x LEDs: Red, Yellow, Green 3x 150 ohm resistors 1x Arduino or Raspberry pi Jumper wires  Repository and detailed instructions See iyp-uk/traffic-signal on github.</description>
    </item>
    
    <item>
      <title>Designing Data Intensive Applications</title>
      <link>https://www.iyp-uk.com/books/designing-data-intensive-applications/</link>
      <pubDate>Mon, 09 Apr 2018 21:18:36 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/books/designing-data-intensive-applications/</guid>
      <description>Read on gitbooks.</description>
    </item>
    
    <item>
      <title>Getting Started With Spark</title>
      <link>https://www.iyp-uk.com/blog/getting-started-with-spark/</link>
      <pubDate>Mon, 19 Feb 2018 14:50:28 +0000</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/getting-started-with-spark/</guid>
      <description>Running Spark locally (single machine) Prerequisites You must have Java to run Spark.
$ java -version java version &amp;quot;1.8.0_151&amp;quot; Java(TM) SE Runtime Environment (build 1.8.0_151-b12) Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode)  Installation Go to the Spark Download page and get the latest version, leaving all options to default. At the time of writing this is spark-2.2.1-bin-hadoop2.7.tgz.
$ cd ~ $ mv Downloads/spark-2.2.1-bin-hadoop2.7.tgz . $ tar -xf spark-2.</description>
    </item>
    
    <item>
      <title>Terraform S3 Lambda Elasticsearch</title>
      <link>https://www.iyp-uk.com/blog/terraform-s3-lambda-elasticsearch/</link>
      <pubDate>Wed, 03 Jan 2018 10:27:10 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/terraform-s3-lambda-elasticsearch/</guid>
      <description>Goal In this post, we will provide the required infrastructure to index data in Elasticsearch from Events of an S3 bucket with Lambda.
This makes use of S3 event notification to fire a Lambda function that will index data from the documents added to the S3 bucket in Elasticsearch.
Elements in use S3 bucket main.tf:
provider &amp;quot;aws&amp;quot; { shared_credentials_file = &amp;quot;${var.aws_shared_credentials_file}&amp;quot; profile = &amp;quot;${var.aws_profile}&amp;quot; region = &amp;quot;${var.aws_region}&amp;quot; } resource &amp;quot;aws_s3_bucket&amp;quot; &amp;quot;bucket&amp;quot; { count = 3 bucket = &amp;quot;${var.</description>
    </item>
    
    <item>
      <title>Kong Custom Plugin</title>
      <link>https://www.iyp-uk.com/blog/kong-custom-plugin/</link>
      <pubDate>Mon, 04 Dec 2017 12:27:18 +0000</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/kong-custom-plugin/</guid>
      <description>Purpose So you&amp;rsquo;re using Kong and have fun with it. But the provided plugins are not enough for your needs? You&amp;rsquo;re demanding!
We will show here how to write your own and distribute it.
 In this article we will build a custom plugin named aws-lambda-status-code. You can find its source code on Github or get it from Luarocks.
 Development Setting up  Also read the official documentation.</description>
    </item>
    
    <item>
      <title>Kong Authentication</title>
      <link>https://www.iyp-uk.com/blog/kong-authentication/</link>
      <pubDate>Mon, 27 Nov 2017 10:07:25 +0000</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/kong-authentication/</guid>
      <description>Run kong We will run kong in docker here, just for ease of use.
Run the database:
$ docker run -d --name kong-database \ -p 9042:9042 \ cassandra:3  Run migrations on Cassandra here (takes some time, let it run, also it can take some time for the kong-database container to become available):
$ docker run --rm \ --link kong-database:kong-database \ -e &amp;quot;KONG_DATABASE=cassandra&amp;quot; \ -e &amp;quot;KONG_PG_HOST=kong-database&amp;quot; \ -e &amp;quot;KONG_CASSANDRA_CONTACT_POINTS=kong-database&amp;quot; \ kong:latest kong migrations up  Finally run kong</description>
    </item>
    
    <item>
      <title>Scale With Docker Swarm</title>
      <link>https://www.iyp-uk.com/blog/scale-with-docker-swarm/</link>
      <pubDate>Tue, 21 Nov 2017 12:17:29 +0000</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/scale-with-docker-swarm/</guid>
      <description>What&amp;rsquo;s the plan In this article, we will demonstrate how to scale your app with docker swarm.
Definitions Swarm A docker swarm is a group of docker hosts operating in swarm mode. Every docker host can be:
 A manager  Manages orchestration of the workers  A worker  Run containers as part of a service (see below for service defintion)  Both at the same time  Node A docker node is an instance of the docker engine.</description>
    </item>
    
    <item>
      <title>Streaming Applications</title>
      <link>https://www.iyp-uk.com/blog/streaming-applications/</link>
      <pubDate>Fri, 17 Nov 2017 09:46:54 +0000</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/streaming-applications/</guid>
      <description>What&amp;rsquo;s the plan? The plan is to define a distributed architecture to get streams and make some sense out of it.
We will create:
   Component Role     Producer Produce streams of (potentially heterogeneous) data   API Gateway Is the entry point to the collection of services   Stream Processor Manages the incoming stream, transforms and allow services to consume   Data warehouse OLAP for streams   Web app A web app, exposing some of the data to a portal    Ok let&amp;rsquo;s start Easy Peasy as it&amp;rsquo;s a vast program here: Producer.</description>
    </item>
    
    <item>
      <title>Gitlab Review Apps</title>
      <link>https://www.iyp-uk.com/blog/gitlab-review-apps/</link>
      <pubDate>Tue, 14 Nov 2017 16:20:25 +0000</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/gitlab-review-apps/</guid>
      <description>Let&amp;rsquo;s have a look at Gitlab&amp;rsquo;s review Apps, available for GitLab.com, GitLab Community Edition, and GitLab Enterprise Edition.
So what&amp;rsquo;s the plan? In this particular example, we will showcase Gitlab&amp;rsquo;s review apps in the context of a trivial docker-based python app. This app essentially returns an &amp;ldquo;Hello world&amp;rdquo;.
Gitlab CI allows us to do plenty of things, and in particular we will want to:
 Build the docker image Run tests Deploy the app to Heroku   The source code is available on gitlab.</description>
    </item>
    
    <item>
      <title>Java Spring Boot Getting Started</title>
      <link>https://www.iyp-uk.com/blog/java-spring-boot-getting-started/</link>
      <pubDate>Sat, 04 Nov 2017 16:04:16 +0000</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/java-spring-boot-getting-started/</guid>
      <description>Part 1: Basic set up  Steps inspired by spring boot getting started guide.
 Add some basic dependencies and Java file to return Hello world!
 See the code on github.
 Part 2: Using spring boot Typical project layout com +- example +- myapplication +- Application.java | +- customer | +- Customer.java | +- CustomerController.java | +- CustomerService.java | +- CustomerRepository.java | +- order +- Order.java +- OrderController.</description>
    </item>
    
    <item>
      <title>TDD Django Docker</title>
      <link>https://www.iyp-uk.com/blog/tdd-django-docker/</link>
      <pubDate>Sun, 29 Oct 2017 10:06:26 +0000</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/tdd-django-docker/</guid>
      <description>What you will learn here We will go through the current Django tutorial with a particular focus on TDD and using Docker.
 This tutorial presents a polls application.
 Prerequisites Check you have the required software on your machine.
$ docker -v Docker version 17.09.0-ce, build afdb6d4  $ docker-compose -v docker-compose version 1.16.1, build 6d1ac21  Getting started We will be running Django along with a PostgreSQL database.</description>
    </item>
    
    <item>
      <title>Clean Code</title>
      <link>https://www.iyp-uk.com/blog/clean-code/</link>
      <pubDate>Sun, 22 Oct 2017 16:45:01 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/clean-code/</guid>
      <description>This post is a summary of some notes taken from the amazing series of clean code videos, themselves taken from the clean code book. Both come highly recommended if you want to improve your professionalism as a software engineer.
Names  Choose names thoughtfully Communicate your intent = by reading it you understand what it is / does Avoid disinformation Pronounceable names Avoid encodings (like Hungarian notation) Ensure code can read like prose in plain english  Variables = nouns Classes = nouns and names Methods = verbs booleans with isSomething  Name as scope dictates:  Private, details functions / classes / methods / vars should have long and explicit names Public, widely used functions / classes / methods / vars should have short and explicit names   Functions  1st rule: functions are small 2nd rule: they are smaller than that Functions do one thing: If a function is included in another it should be taken out  Extract till you drop If you can extract one function from another, you should, as the function isn’t doing one thing indeed  Classes hide in long functions =&amp;gt; Long functions = classes  Function structure  Small function signatures: 3 arguments max No boolean argument Avoid switch and if statements, replace by polymorphism Functional programming  No assignment statement A function is immutable: same input always gives the same output CQS: Command and Query Separation  Command  Execute the command and return nothing Can throw exception  Query  Execute the query and return value but do not change state  If a method modifies state, it must return void If a method queries state, it must not modify it  Tell don’t ask  Let the object itself deal with its state rather than asking for it before asking for a command Don’t chain methods  Block-passing technique Law of Demeter  Structured programming  Sequence Selection Interaction Single entrance at the top, single exit at the bottom, for all these blocks, and by composition modules, and systems do too   Form  Comments Classes and parameters:  Can have private parameters Tell don’t ask implies: No getters, No setters your class and the objects resulting from it are just a bunch of functions from the outside Polymorphism If you expose data, make it as abstract as possible so that we can derivate from that class with no issues  Class VS Data structure  DS is opposite of the class.</description>
    </item>
    
    <item>
      <title>Getting Started With Bluetooth Low Energy</title>
      <link>https://www.iyp-uk.com/blog/getting-started-with-bluetooth-low-energy/</link>
      <pubDate>Sat, 26 Aug 2017 18:14:18 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/getting-started-with-bluetooth-low-energy/</guid>
      <description>Talking electronics Hang on, what is Bluetooth in the first place? Have a look at the definition on the official bluetooth website.
One important thing to notice is that Bluetooth is a wireless technology standard using UFH (Ultra High Frequency) radio waves. This means it&amp;rsquo;s in the same family of telecommunications than GSM, GPS, WiFi, walkie-talkies and many more.
As you have probably discovered on their site, Bluetooth comes in different flavours:</description>
    </item>
    
    <item>
      <title>Getting Started With Terraform</title>
      <link>https://www.iyp-uk.com/blog/getting-started-with-terraform/</link>
      <pubDate>Thu, 24 Aug 2017 16:23:41 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/getting-started-with-terraform/</guid>
      <description>Definitions Terraform is a tool to manage infrastructures. This means you will create infrastructures (compute instances, storage, networking, DNS entries, &amp;hellip;) You may be already familiar with Ansible, which is a configuration management tool. This means with tools like Ansible, you can configure the infrastructure elements already created either manually or with Terraform.
What we will do  Creating an EC2 instance on AWS Destroying this EC2 instance  Install terraform  Please refer to the official documentation for variants.</description>
    </item>
    
    <item>
      <title>Getting Started With Kubernetes</title>
      <link>https://www.iyp-uk.com/blog/getting-started-with-kubernetes/</link>
      <pubDate>Thu, 24 Aug 2017 11:07:05 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/getting-started-with-kubernetes/</guid>
      <description>Let&amp;rsquo;s get started with Kubernetes and play around with it locally.
Foreword This article is largely inspired by the official Kubernetes getting started guide.
What is minikube?  Minikube is a tool that makes it easy to run Kubernetes locally. Minikube runs a single-node Kubernetes cluster inside a VM on your laptop for users looking to try out Kubernetes or develop with it day-to-day.
 Installation  Full instructions can be found on minikube installation guide</description>
    </item>
    
    <item>
      <title>Docker Compose Python Eve Mongodb</title>
      <link>https://www.iyp-uk.com/blog/docker-compose-python-eve-mongodb/</link>
      <pubDate>Fri, 18 Aug 2017 14:47:35 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/docker-compose-python-eve-mongodb/</guid>
      <description>PyCharm As a Python developer you are probably familiar with PyCharm, an amazing IDE from JetBrains. If you don&amp;rsquo;t know anything about it, have a look, you&amp;rsquo;ll probably not regret it :) Some of the steps in this article will make mention of PyCharm, however, it&amp;rsquo;s not required and you can still follow if you&amp;rsquo;re using another IDE. If you&amp;rsquo;re not using any IDE, well, god save your soul.</description>
    </item>
    
    <item>
      <title>Gardenlog With React, Node and Docker</title>
      <link>https://www.iyp-uk.com/blog/gardenlog-with-react-node-and-docker/</link>
      <pubDate>Mon, 31 Jul 2017 12:01:35 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/gardenlog-with-react-node-and-docker/</guid>
      <description>This will show the rewriting of a project using different technologies.
What is Gardenlog? Gardenlog is a project which:
 monitors garden (even if it could be anything), gathering all sorts of meteorological information allows users to interact with it   IYP UK has built it using several technologies:
 Backend: Python and Elasticsearch Frontend: Angular 4 with Material Hosting: All hosted on AWS, apart from the physical part, running on a raspberry pi   Scope of this project In this project, we will rewrite a good part of the Gardenlog project to demonstrate use of the following:</description>
    </item>
    
    <item>
      <title>Home</title>
      <link>https://www.iyp-uk.com/home/</link>
      <pubDate>Mon, 31 Jul 2017 11:31:18 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/home/</guid>
      <description>IYP UK provides digital solutions for real-world problems.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://www.iyp-uk.com/about/</link>
      <pubDate>Mon, 31 Jul 2017 11:06:28 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/about/</guid>
      <description> What we do IYP UK is an IT consultancy company operating across Europe.
We specialise in IoT, Big Data and Cloud.
New circumstances call for new methods, so we offer state-of-the-art services such as:
 Architecture, Technical guidance and Strategy Project / Product management Development, Testing and Infrastructure Performance and Security audits Operations, Monitoring, Logging and Alerting  Clients  Air France Avene Cartier Elastoplast Intelematics Kellogg&amp;rsquo;s LVMH Michelin PwC  </description>
    </item>
    
    <item>
      <title>License</title>
      <link>https://www.iyp-uk.com/license/</link>
      <pubDate>Mon, 31 Jul 2017 11:06:04 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/license/</guid>
      <description>Copyright 2017-2018 IYP UK. All rights reserved.</description>
    </item>
    
    <item>
      <title>Nodejs Docker And Aws</title>
      <link>https://www.iyp-uk.com/blog/nodejs-docker-and-aws/</link>
      <pubDate>Mon, 31 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/nodejs-docker-and-aws/</guid>
      <description>In this post, we will make use of NodeJS and Docker to provide and API which interfaces with an Elasticsearch instance in AWS.
Assuming you already have an AWS account, and aws-cli set up.
Process  Write the NodeJS app locally Wrap it a docker image and deploy this image to a registry (we will use docker hub here) Use AWS ECS (EC2 Container Service) to deploy and scale your app in the cloud.</description>
    </item>
    
  </channel>
</rss>