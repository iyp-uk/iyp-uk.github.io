<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Elasticsearch on IYP UK</title>
    <link>https://www.iyp-uk.com/tags/elasticsearch/</link>
    <description>Recent content in Elasticsearch on IYP UK</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-GB</language>
    <copyright>Copyright Â© 2017-2018 IYP UK</copyright>
    <lastBuildDate>Wed, 03 Jan 2018 10:27:10 +0100</lastBuildDate>
    
	<atom:link href="https://www.iyp-uk.com/tags/elasticsearch/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Terraform S3 Lambda Elasticsearch</title>
      <link>https://www.iyp-uk.com/blog/terraform-s3-lambda-elasticsearch/</link>
      <pubDate>Wed, 03 Jan 2018 10:27:10 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/terraform-s3-lambda-elasticsearch/</guid>
      <description>Goal In this post, we will provide the required infrastructure to index data in Elasticsearch from Events of an S3 bucket with Lambda.
This makes use of S3 event notification to fire a Lambda function that will index data from the documents added to the S3 bucket in Elasticsearch.
Elements in use S3 bucket main.tf:
provider &amp;quot;aws&amp;quot; { shared_credentials_file = &amp;quot;${var.aws_shared_credentials_file}&amp;quot; profile = &amp;quot;${var.aws_profile}&amp;quot; region = &amp;quot;${var.aws_region}&amp;quot; } resource &amp;quot;aws_s3_bucket&amp;quot; &amp;quot;bucket&amp;quot; { count = 3 bucket = &amp;quot;${var.</description>
    </item>
    
    <item>
      <title>Gardenlog With React, Node and Docker</title>
      <link>https://www.iyp-uk.com/blog/gardenlog-with-react-node-and-docker/</link>
      <pubDate>Mon, 31 Jul 2017 12:01:35 +0100</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/gardenlog-with-react-node-and-docker/</guid>
      <description>This will show the rewriting of a project using different technologies.
What is Gardenlog? Gardenlog is a project which:
 monitors garden (even if it could be anything), gathering all sorts of meteorological information allows users to interact with it   IYP UK has built it using several technologies:
 Backend: Python and Elasticsearch Frontend: Angular 4 with Material Hosting: All hosted on AWS, apart from the physical part, running on a raspberry pi   Scope of this project In this project, we will rewrite a good part of the Gardenlog project to demonstrate use of the following:</description>
    </item>
    
    <item>
      <title>Nodejs Docker And Aws</title>
      <link>https://www.iyp-uk.com/blog/nodejs-docker-and-aws/</link>
      <pubDate>Mon, 31 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://www.iyp-uk.com/blog/nodejs-docker-and-aws/</guid>
      <description>In this post, we will make use of NodeJS and Docker to provide and API which interfaces with an Elasticsearch instance in AWS.
Assuming you already have an AWS account, and aws-cli set up.
Process  Write the NodeJS app locally Wrap it a docker image and deploy this image to a registry (we will use docker hub here) Use AWS ECS (EC2 Container Service) to deploy and scale your app in the cloud.</description>
    </item>
    
  </channel>
</rss>